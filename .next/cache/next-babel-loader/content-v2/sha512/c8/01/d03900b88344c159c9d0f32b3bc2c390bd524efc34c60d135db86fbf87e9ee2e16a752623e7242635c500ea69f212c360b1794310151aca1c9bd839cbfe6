{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vuong\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Courses\\\\NextJS-Course\\\\pages\\\\events\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/results-title/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/error-alert/error-alert';\n\nfunction FilteredEventsPage(props) {\n  _s();\n\n  var router = useRouter();\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: \"Invalid filter. ErrorAlertlease adjust your values!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: \"No events found for the chosen filter!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  var date = new Date(props.date.year, props.date.month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\nexport var __N_SSP = true;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["C:/Users/vuong/OneDrive/Máy tính/Courses/NextJS-Course/pages/events/[...slug].js"],"names":["Fragment","useRouter","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","props","router","hasError","filteredEvents","events","length","date","Date","year","month"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AACjC,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAEA,MAAIM,KAAK,CAACE,QAAV,EAAoB;AAClB,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAMC,cAAc,GAAGH,KAAK,CAACI,MAA7B;;AAEA,MAAI,CAACD,cAAD,IAAmBA,cAAc,CAACE,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASP,KAAK,CAACM,IAAN,CAAWE,IAApB,EAA0BR,KAAK,CAACM,IAAN,CAAWG,KAAX,GAAmB,CAA7C,CAAb;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlCQJ,kB;UACQL,S;;;KADRK,kB;;AA2ET,eAAeA,kBAAf","sourcesContent":["import { Fragment } from 'react'\r\nimport { useRouter } from 'next/router'\r\n\r\nimport { getFilteredEvents } from '../../helpers/api-utils'\r\nimport EventList from '../../components/events/event-list'\r\nimport ResultsTitle from '../../components/results-title/results-title'\r\nimport Button from '../../components/ui/button'\r\nimport ErrorAlert from '../../components/error-alert/error-alert'\r\n\r\nfunction FilteredEventsPage(props) {\r\n  const router = useRouter()\r\n\r\n  if (props.hasError) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          Invalid filter. ErrorAlertlease adjust your values!\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const filteredEvents = props.events\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>No events found for the chosen filter!</ErrorAlert>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const date = new Date(props.date.year, props.date.month - 1)\r\n\r\n  return (\r\n    <Fragment>\r\n      <ResultsTitle date={date} />\r\n      <EventList items={filteredEvents} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context\r\n\r\n  const filterData = params.slug\r\n\r\n  const filteredYear = filterData[0]\r\n  const filteredMonth = filterData[1]\r\n\r\n  const numYear = +filteredYear\r\n  const numMonth = +filteredMonth\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12\r\n  ) {\r\n    return {\r\n      props: { hasError: true }\r\n    }\r\n  }\r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth\r\n  })\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n      date: {\r\n        year: numYear,\r\n        month: numMonth\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default FilteredEventsPage\r\n"]},"metadata":{},"sourceType":"module"}