{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../dummy-data';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/results-title/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/error-alert/error-alert';\n\nfunction FilteredEventsPage() {\n  const router = useRouter();\n  const filterData = router.query.slug;\n\n  if (!filterData) {\n    return /*#__PURE__*/_jsx(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    });\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(ErrorAlert, {\n        children: \"Invalid filter. ErrorAlertlease adjust your values!\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsx(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        })\n      })]\n    });\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsx(Fragment, {\n      children: /*#__PURE__*/_jsx(ErrorAlert, {\n        children: \"No events found for the chosen filter!\"\n      })\n    });\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(ResultsTitle, {\n      date: date\n    }), /*#__PURE__*/_jsx(EventList, {\n      items: filteredEvents\n    })]\n  });\n}\n\nexport default FilteredEventsPage;","map":null,"metadata":{},"sourceType":"module"}