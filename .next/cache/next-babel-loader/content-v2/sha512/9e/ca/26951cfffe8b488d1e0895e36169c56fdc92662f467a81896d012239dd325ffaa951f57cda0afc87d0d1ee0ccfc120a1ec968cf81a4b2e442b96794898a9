{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport async function getAllEvents() {\n  const response = await fetch('https://nextjs-course-e5902-default-rtdb.firebaseio.com/events.json');\n  const data = await response.json();\n  const events = [];\n\n  for (const key in data) {\n    events.push(_objectSpread({\n      id: key\n    }, data[key]));\n  }\n\n  return events;\n}\nexport async function getFeaturedEvents() {\n  const allEvents = await getAllEvents();\n  return allEvents.filter(event => event.isFeatured);\n}\nexport async function getEventById(id) {\n  const allEvents = await getAllEvents();\n  return allEvents.find(event => event.id === id);\n}\nexport function getFilteredEvents(dateFilter) {\n  const {\n    year,\n    month\n  } = dateFilter;\n  let filteredEvents = DUMMY_EVENTS.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\n  });\n  return filteredEvents;\n}","map":{"version":3,"sources":["C:/Users/vuong/OneDrive/Máy tính/Courses/NextJS-Course/helpers/api-utils.js"],"names":["getAllEvents","response","fetch","data","json","events","key","push","id","getFeaturedEvents","allEvents","filter","event","isFeatured","getEventById","find","getFilteredEvents","dateFilter","year","month","filteredEvents","DUMMY_EVENTS","eventDate","Date","date","getFullYear","getMonth"],"mappings":";;;;;;AAAA,OAAO,eAAeA,YAAf,GAA8B;AACnC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEAD0B,CAA5B;AAGA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,IAAAA,MAAM,CAACE,IAAP;AACEC,MAAAA,EAAE,EAAEF;AADN,OAEKH,IAAI,CAACG,GAAD,CAFT;AAID;;AAED,SAAOD,MAAP;AACD;AAED,OAAO,eAAeI,iBAAf,GAAmC;AACxC,QAAMC,SAAS,GAAG,MAAMV,YAAY,EAApC;AACA,SAAOU,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,UAAlC,CAAP;AACD;AAED,OAAO,eAAeC,YAAf,CAA4BN,EAA5B,EAAgC;AACrC,QAAME,SAAS,GAAG,MAAMV,YAAY,EAApC;AACA,SAAOU,SAAS,CAACK,IAAV,CAAeH,KAAK,IAAIA,KAAK,CAACJ,EAAN,KAAaA,EAArC,CAAP;AACD;AAGD,OAAO,SAASQ,iBAAT,CAA2BC,UAA3B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,UAAxB;AAEA,MAAIG,cAAc,GAAGC,YAAY,CAACV,MAAb,CAAqBC,KAAD,IAAW;AAClD,UAAMU,SAAS,GAAG,IAAIC,IAAJ,CAASX,KAAK,CAACY,IAAf,CAAlB;AACA,WACEF,SAAS,CAACG,WAAV,OAA4BP,IAA5B,IAAoCI,SAAS,CAACI,QAAV,OAAyBP,KAAK,GAAG,CADvE;AAGD,GALoB,CAArB;AAOA,SAAOC,cAAP;AACD","sourcesContent":["export async function getAllEvents() {\r\n  const response = await fetch(\r\n    'https://nextjs-course-e5902-default-rtdb.firebaseio.com/events.json'\r\n  )\r\n  const data = await response.json()\r\n\r\n  const events = []\r\n\r\n  for (const key in data) {\r\n    events.push({\r\n      id: key,\r\n      ...data[key]\r\n    })\r\n  }\r\n\r\n  return events\r\n}\r\n\r\nexport async function getFeaturedEvents() {\r\n  const allEvents = await getAllEvents()\r\n  return allEvents.filter((event) => event.isFeatured)\r\n}\r\n\r\nexport async function getEventById(id) {\r\n  const allEvents = await getAllEvents()\r\n  return allEvents.find(event => event.id === id)\r\n}\r\n\r\n\r\nexport function getFilteredEvents(dateFilter) {\r\n  const { year, month } = dateFilter\r\n\r\n  let filteredEvents = DUMMY_EVENTS.filter((event) => {\r\n    const eventDate = new Date(event.date)\r\n    return (\r\n      eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\r\n    )\r\n  })\r\n\r\n  return filteredEvents\r\n}"]},"metadata":{},"sourceType":"module"}